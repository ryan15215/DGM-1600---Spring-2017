Notes on Conventions and Syntax

Syntax = Affects how the code runs. Will error if code is incorrect. (braces, semicolons, upper vs lower case, ect.)
Conventions = How the code is written. Does not affect how the code will run. (white space (indents) and formatting)

Dot Operator - similar to commas used in address--seperates, and narrows down. Biggest to smallest.

    Example--
    Debug.Log(tansform.position.x) = Country.State(city.street.house number)

    Transform
        Position - units (feet, meters, etc.)
        Rotation - degrees
        Scale - units
        -- transform.rotation.y <=5f ------ tells what type of transform (rotaion) what axis (y) and what unit (ft)

Indenting (white space) - allows to read more easily. Each section of code located between a section of brackets can be indented 1 space (tab) so each seperate function can be seen more easily.

Example of using indents to organize code:
    public class BasicSyntax : MonoBehaviour
    {
        void Start ()
        {
            Debug.Log(transform.position.x);
            
            if(transform.position.y <= 5f)
            {
                Debug.Log ("I'm about to hit the ground!");
            }
        }
    }

comments - leave your self or other coders a note, or disable a part of code. a single line comment can be made with two forward slashes (//) and a multi line comment can be made using 1 foward slash followed by an astrisk (/*) and closed by the opposite, and astrisk then forward slash (*/)

example single line comment:
    // note to yourself or to disable a line of code

example multi line comment:   
    /* note
    to
    yourself
    or 
    other
    coders*/
